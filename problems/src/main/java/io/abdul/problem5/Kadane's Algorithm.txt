1. Think of it like you're raising fund for your startup
2. You don't have money, but you have to pair up with at least one of your friends, you can't ignore all
    AND you can't pick random people, you always carry them in the order you meet or leave them. You can't just ignore
    one and move forward, others will complain and leave you.
3. You go to the first person, if he's adding money to your wallet OR NOT leaving you at debt, you can carry him.
    If he's leaving you at debt, carrying them to the next level will NOT add any value to you.

This is DP algorithms.
1) You solve a sub-problem
2) Save the solution
3) Reuse it

Here,
1) We sum the smallest sub-set
2) if it's adding value, keep it, or else leave-it
3) Use that for solving other sub-sets


Example: -2,1,-3,4,-1,2,1,-5,4
Person you're carrying with you | Wallet balance if we add him or starting value | Maximum wallet balance ever recorded
-2                  | 0     | -2
1                   | 1     | 1
1,-3                | 0     | 1
4                   | 4     | 4
4,-1                | 3     | 4
4,-1,2              | 5     | 5
4,-1,2,1            | 6     | 6
4,-1,2,1,-5         | 1     | 6
4,-1,2,1,-5,4       | 5     | 6

Still we've 4,-1,2,1,-5,4 at the end, which is giving 5,
we were able to make 6 with early crew. Let's fall back to them only!

Sorry 4,-1,2,1,-5,4, I decided to go with 4,-1,2,1 as they give the highest funds for my startup!
